image: python:3.7-alpine

stages:
  - test
  - style

variables:
  DB_NAME: "db_api"
  DB_USER: "db_api"
  DB_PASS: "db_api"
  DB_ROOT_PASS: "root"
  DB_DATA_PATH: "/var/lib/mysql"
  API_MODE: "dev"

before_script:
  - apk add --update mariadb mariadb-client mariadb-connector-c-dev build-base
  - echo "GRANT ALL ON *.* TO ${DB_USER}@'127.0.0.1' IDENTIFIED BY '${DB_PASS}' WITH GRANT OPTION;" > /tmp/sql
  - echo "GRANT ALL ON *.* TO ${DB_USER}@'localhost' IDENTIFIED BY '${DB_PASS}' WITH GRANT OPTION;" >> /tmp/sql
  - echo "GRANT ALL ON *.* TO ${DB_USER}@'::1' IDENTIFIED BY '${DB_PASS}' WITH GRANT OPTION;" >> /tmp/sql
  - echo "CREATE DATABASE ${DB_NAME};"
  - echo "DELETE FROM mysql.user WHERE User='';" >> /tmp/sql
  - echo "DROP DATABASE test;" >> /tmp/sql
  - echo "FLUSH PRIVILEGES;" >> /tmp/sql
  - mysql_install_db --user=mysql --datadir=${DB_DATA_PATH}
  - /usr/bin/mysqld_safe --datadir='/var/lib/mysql'
  - mysqladmin -u root password "${DB_ROOT_PASS}"
  - cat /tmp/sql | mysql -u root --password="${DB_ROOT_PASS}"
  - pip install requirements.txt
  - cd src
  - python manage.py makemigrations `for i in $(ls -d */); do echo ${i%%/}; done | grep -v 'api' | grep -v 'utils'`
  - python manage.py migrate
  - find -type d -name migrations -prune -exec rm -rf {} \;


test_api:
  stage: test
  only:
    - master
    - develop
  script:
    - cd src
    - python manage.py test


codestyle_api:
  stage: style
  only:
    - master
    - develop
  script:
    - cd src
    - pip install pycodestyle
    - pycodestyle .


docstyle_api:
  stage: style
  only:
    - master
    - develop
  script:
    - cd src
    - pip install pydocstyle
    - pydocstyle .
